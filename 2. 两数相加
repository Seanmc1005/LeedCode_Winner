/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int c=0;
        int num=0;
        ListNode* L1=l1;
        ListNode* pre=l1;
        while(l1!=nullptr&&l2!=nullptr){
            num=l1->val+l2->val+c;
            c=num/10;
            num=num%10;
            l1->val=num;
            pre=l1;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1!=nullptr){
            num=l1->val+c;
            c=num/10;
            num=num%10;
            l1->val=num;
            pre=l1;
            l1=l1->next;
        }
        if(l2!=nullptr){
            pre->next=l2;
        }
        while(l2!=nullptr){
            num=l2->val+c;
            c=num/10;
            num=num%10;
            l2->val=num;
            pre=l2;
            l2=l2->next;
        }
        if(c==1){
            pre->next=new ListNode(c);
        }
        return L1;
    }
}
