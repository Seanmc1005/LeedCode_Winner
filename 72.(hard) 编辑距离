class Solution {
public:
    int minDistance(string word1, string word2) {
        //南大软院原题;
        //动态规划题目-->dp[i][j]表示Word1前i个-->Word2前j个变换所使用的最少操作数;
        //dp[i][j]=if：word[i]==word[j]-->dp[i-1][j-1] 
        //else：min(dp[i-1][j]+1,dp[i-1][j-1]+1,dp[i][j-1]+1)分别对应删除、替换、插入;
        int m=word1.length();
        int n=word2.length();
        vector<vector<int>> dp(m+1);
        for(int i=0;i<=m;i++){
            vector<int> temp(n+1,0);
            dp[i]=temp;
            dp[i][0]=i;
        }
        for(int i=1;i<=n;i++){
            dp[0][i]=i;
        }
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                dp[i][j]= word1[i-1]==word2[j-1]? dp[i-1][j-1]:min(dp[i-1][j],min(dp[i-1][j-1],dp[i][j-1]))+1;
            }
        }
        return dp[m][n];
    }
};
